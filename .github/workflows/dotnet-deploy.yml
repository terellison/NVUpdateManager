# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Deploy

on:
  push:
    branches: [ "main" ]

jobs:

  release:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: Increment Commit Tag
        id: version-tag
        run: |
          current_tag=$(git describe --abbrev=0 --tags)
          echo current tag: $current_tag
          major=$(echo $current_tag | cut -d "." -f 1 | cut -d "v" -f 2)
          minor=$(echo $current_tag | cut -d "." -f 2)
          new_minor=$((minor + 1))
          release_tag="v$major.$new_minor"
          git tag $release_tag
          git push --tags
          echo "RELEASE_TAG=$release_tag" >> $GITHUB_OUTPUT
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version-tag.outputs.release_tag }}
          release_name: Release ${{ steps.version-tag.outputs.release_tag }}
          draft: false
          prerelease: false
        
  build:
    needs: release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Setup devenv
        id: setup-devenv
        run: |
          $devenv_location = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" '-property' productPath
          echo "DEVENV_LOCATION=$devenv_location"
          echo "DEVENV_LOCATION=$devenv_location" >> $GITHUB_OUTPUT
      - name: Build installer project
        run: |
          $args = ".\NVUpdateManager.sln /Deploy Release /Project `"NVUpdateManager.NotificationService.Installer\NVUpdateManager.NotificationService.Installer.vdproj`"".Split(" ")
          $output = & "${{ steps.setup-devenv.outputs.devenv_location }}" $args
          Write-Host $output
          Start-Sleep -Seconds 60
      - name: Compress archive
        run: Compress-Archive -Path .\NVUpdateManager.NotificationService.Installer\Release\* -DestinationPath .\NVUpdateManager.NotificationService.zip -CompressionLevel Fastest
      - name: Upload zip file
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: NVUpdateManager.NotificationService.zip
          
  upload-release-artifact:
    needs: 
    - build
    - release
    runs-on: ubuntu-latest
    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./NVUpdateManager.NotificationService.zip
          asset_name: NVUpdateManager.NotificationService.zip
          asset_content_type: application/zip
          
